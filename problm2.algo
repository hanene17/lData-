ALGORITHM Hash_Map
VAR
   // declaring map table
   HashMap: Map<Integer, Integer>;
   set1 : ARRAY_OF INTEGER[3]; 

  set2 : ARRAY_OF INTEGER[3]; 
  i : INTEGER;
  j : INTEGER; 
  
  count   : INTEGER :=1;
  element : INTEGER;
  key : INTEGER;
  sum: INTEGER:=0;
BEGIN
  HashMap: Map<Integer, Integer>;
  set1  := {12, 13, 6, 10};
  set2  := {13, 10, 16, 15};


  FOR i FROM 0 TO  set1.length-1 STEP 1 
 
  DO  
  element := set1[i];
  IF(map.containsKey(element)) THEN
  count == map.get(element);
  map.put(element, count+1);
  ELSE
  map.put(element, 1);
 
  END_IF
  END_FOR 

  FOR j FROM 0 TO  set2.length-1 STEP 1 
  
  DO  
  element := set2[j];
  IF(map.containsKey(element)) THEN
  count == map.get(element);
  map.put(element, count+1);
  ELSE
  map.put(element, 1);
 
  END_IF
  END_FOR

  Set<Integer> set == map.keySet();
  Iterator<Integer> iterator == set.iterator();
  WHILE(iterator.hasNext())  
  DO
  key = iterator.next();
  IF(map.get(key)==1) THEN
  sum := sum + key;
  END_IF
  END_WHILE
  Write(sum)
END